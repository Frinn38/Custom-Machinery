import java.nio.file.Files

buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1+', changing: true
        classpath 'org.parchmentmc:librarian:1.+'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id "com.modrinth.minotaur" version "2.+"
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

apply from: 'https://raw.githubusercontent.com/SizableShrimp/Forge-Class-Remapper/main/classremapper.gradle'

version = "${mc_version}-0.6.8"
group = 'fr.frinn.custommachinery' // http://maven.apache.org/guides/mini/guide-naming-conventions.html

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

sourceSets {
    api
    main{
        runtimeClasspath += sourceSets.api.output
        compileClasspath += sourceSets.api.output
        ext.refMap = "main.refmap.json"
    }
    test
}

configurations {
    apiImplementation.extendsFrom(implementation)
}

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'parchment', version: "2022.03.13-${mc_version}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=custommachinery.mixins.json"

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                custommachinery {
                    source sourceSets.main
                    source sourceSets.api
                }
            }

            accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
        }

        client2 {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=custommachinery.mixins.json"

            args '--username', 'Dev2'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                custommachinery {
                    source sourceSets.main
                    source sourceSets.api
                }
            }

            accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=custommachinery.mixins.json"

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                custommachinery {
                    source sourceSets.main
                    source sourceSets.api
                }
            }

            accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'custommachinery', '--all', '--output', file('src/generated/resources/')

            mods {
                custommachinery {
                    source sourceSets.main
                    source sourceSets.api
                }
            }
        }

        accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    }
}

repositories {
    maven {
        name = "Jared maven"
        url = "https://maven.blamejared.com"
        content {
            includeGroup "com.blamejared.crafttweaker"
        }
    }
    maven {
        name = "Curse maven"
        url = "https://www.cursemaven.com"
    }
    maven {
        name = "Mod maven"
        url = "https://modmaven.dev/"
    }
    maven {
        name = "Jei maven"
        url = "https://dvs1.progwml6.com/files/maven"
        content {
            includeGroup "mezz.jei"
        }
    }
    maven {
        name = "Architectury maven"
        url = "https://maven.architectury.dev"
        content {
            includeGroup "dev.architectury"
        }
    }
    maven {
        name = "KubeJS and Rhino maven"
        url = "https://maven.saps.dev/minecraft"
        content {
            includeGroup "dev.latvian.mods"
        }
    }
}

dependencies {
    //Forge + MC
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    //The one probe
    implementation fg.deobf("mcjty.theoneprobe:theoneprobe:${top_version}") {transitive = false}

    //JEI
    //"implementation" needed for our API to see it.
    implementation fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")

    //Crafttweaker
    implementation fg.deobf("com.blamejared.crafttweaker:CraftTweaker-forge-${mc_version}:${ct_version}")

    //KubeJS and dependencies
    implementation fg.deobf("dev.latvian.mods:kubejs-forge:${kubejs_version}")
    implementation fg.deobf("dev.latvian.mods:rhino-forge:${rhino_version}")
    implementation fg.deobf("dev.architectury:architectury-forge:${architectury_version}")

    //Building gadgets
    implementation(fg.deobf("curse.maven:gadgets-298187:3725903"))

    //Jade
    compileOnly fg.deobf("curse.maven:jade-api-324717:3803228")
    runtimeOnly fg.deobf("curse.maven:jade-324717:3803226")

    //Mekanism
    runtimeOnly fg.deobf("mekanism:Mekanism:${mekanism_version}")

    //Spark profiler
    runtimeOnly fg.deobf("curse.maven:spark-361579:3767286")

    //Mixins
    annotationProcessor "org.spongepowered:mixin:0.8.2:processor"
}

def getManifestAttributes(String title) {
    return [
            "Specification-Title"     : title,
            "Specification-Vendor"    : "Frinn",
            "Specification-Version"   : project.version,
            "Implementation-Title"    : title,
            "Implementation-Version"  : project.version,
            "Implementation-Vendor"   : "Frinn",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs"            : "custommachinery.mixins.json"
    ]
}

jar {
    from sourceSets.main.output.classesDirs
    from sourceSets.main.output.resourcesDir
    from sourceSets.api.output.classesDirs
    from sourceSets.api.output.resourcesDir

    manifest.attributes(getManifestAttributes(project.name))
}

task apiJar(type: Jar) {
    archiveClassifier.set("api")
    from sourceSets.api.output
    manifest.attributes(getManifestAttributes(project.name))
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
apiJar.finalizedBy('reobfJar')

if (System.getenv("CURSEFORGE")) {
    curseforge {
        apiKey = System.getenv("CURSEFORGE")
        project {
            id = "457017"
            addGameVersion mc_version
            changelogType = "markdown"
            changelog = file("run/changelog.md")
            releaseType = "beta"
            mainArtifact(jar) {
                displayName = "Custom-Machinery-${project.version}"
                relations {
                    optionalDependency "crafttweaker"
                    optionalDependency "jei"
                    optionalDependency "the-one-probe"
                    optionalDependency "kubejs"
                }
            }
            addArtifact(apiJar) {
                displayName = "Custom-Machinery-${project.version}-api"
            }
        }
    }
}

if(System.getenv("MODRINTH")) {
    modrinth {
        token = System.getenv("MODRINTH")
        projectId = "OrB5XFtI"
        versionName = "Custom-Machinery-${project.version}"
        versionType = "beta"
        uploadFile = jar
        additionalFiles = [apiJar]
        gameVersions = [mc_version]
        changelog = Files.readString(file("run/changelog.md").toPath())
        dependencies {
            optional.project "kubejs"
            optional.project "roughly-enough-items"
        }
    }
}