architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/custommachinery.accesswidener")
}

configurations {
    api
    shadowApi
    compileClasspath.extendsFrom api
    runtimeClasspath.extendsFrom api
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"
    modApi "dev.latvian.mods:kubejs:${rootProject.kubejs_version}"

    api(project(path: ":api", configuration: "namedElements")) { transitive false }
    shadowApi(project(path: ":api", configuration: "transformProductionForge")) { transitive = false }

    modApi("me.shedaniel.cloth:cloth-config:${project.cloth_config_version}")

    modCompileOnlyApi("mezz.jei:jei-${project.minecraft_version}-common-api:${project.jei_version}")
    modCompileOnlyApi("com.blamejared.crafttweaker:CraftTweaker-common-1.18.2:${project.ct_version}")
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
