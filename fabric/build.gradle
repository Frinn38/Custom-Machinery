plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "me.shedaniel.unified-publishing"
}

architectury {
    platformSetupLoomIde()
    fabric()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath
}

project.version = "${project.minecraft_version}-${project.mod_version}-fabric"

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common

    api
    shadowApi
    compileClasspath.extendsFrom api
    runtimeClasspath.extendsFrom api
    developmentForge.extendsFrom api
}

repositories {
    //Mod Menu
    maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    modApi "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_api_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury-fabric:${rootProject.architectury_version}"
    modApi "dev.latvian.mods:kubejs-fabric:${rootProject.kubejs_version}"
    modApi "com.terraformersmc:modmenu:3.2.3"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }

    api(project(path: ":api", configuration: "namedElements")) { transitive false }
    shadowApi(project(path: ":api", configuration: "transformProductionFabric")) { transitive = false }

    //JEI
    modCompileOnlyApi "mezz.jei:jei-${project.minecraft_version}-common-api:${project.jei_version}"
    modCompileOnlyApi "mezz.jei:jei-${project.minecraft_version}-fabric-api:${project.jei_version}"
    modRuntimeOnly "mezz.jei:jei-${project.minecraft_version}-fabric:${project.jei_version}"

    //Cloth config
    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    //Energy API
    include modApi('teamreborn:energy:2.2.0') {
        exclude(group: "net.fabricmc.fabric-api")
    }

    //Jade
    modImplementation("curse.maven:jade-324717:3922834")

    //Crafttweaker
    modImplementation("com.blamejared.crafttweaker:CraftTweaker-fabric-1.18.2:${project.ct_version}")

    //Tech Reborn
    modRuntimeOnly ("TechReborn:TechReborn-${project.tr_version}") {
        exclude group: "net.fabricmc.fabric-api"
        exclude group: "RebornCore"
    }
    modRuntimeOnly ("RebornCore:RebornCore-${project.rc_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "modid": project.modid,
                "version": project.version,
                "mod_name": project.mod_name,
                "mod_description": project.mod_description,
                "author": project.author,
                "homepage": project.homepage,
                "github": project.github,
                "license": project.license,
                "icon": project.icon,
                "minecraft_version": project.minecraft_version,
                "architectury_version": project.architectury_version,
                "cloth_config_version": project.cloth_config_version
    }
}

shadowJar {
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon, project.configurations.shadowApi]
    classifier "dev-shadow"
}

remapJar {
    injectAccessWidener = true
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}

unifiedPublishing {
    project {
        displayName = "[Fabric]Custom-Machinery-${project.minecraft_version}-${project.mod_version}"
        releaseType = "beta"
        changelog = rootProject.file("CHANGELOG.md").text
        gameVersions = ["1.18.2"]
        gameLoaders = ["fabric"]
        mainPublication remapJar

        var CURSE_API_KEY = System.getenv("CURSEFORGE")
        if (CURSE_API_KEY != null) {
            curseforge {
                token = CURSE_API_KEY
                id = "457017"
                gameVersions.addAll "Java 17"
                relations {
                    depends "architectury-api"
                    depends "cloth-config"
                    optional "crafttweaker"
                    optional "jei"
                    optional "kubejs"
                    optional "jade"
                }
            }
        }

        var MODRINTH_TOKEN = System.getenv("MODRINTH")
        if (MODRINTH_TOKEN != null) {
            modrinth {
                token = MODRINTH_TOKEN
                id = "OrB5XFtI"
                relations {
                    depends "architectury-api"
                    depends "cloth-config"
                    optional "kubejs"
                }
            }
        }
    }
}