plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "me.shedaniel.unified-publishing"
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name
    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    //Required
    forge("net.minecraftforge:forge:${project.forge_version}")
    modApi("dev.architectury:architectury-forge:${project.architectury_version}")
    modApi("me.shedaniel.cloth:cloth-config-forge:${project.cloth_config_version}")

    //Common module
    common(project(path: ":common", configuration: "namedElements")) { transitive = false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

    //Api module
    common(project(path: ":api", configuration: "namedElements")) { transitive = false }
    shadowCommon(project(path: ":api", configuration: "transformProductionForge")) { transitive = false }

    //Saecularia Caudices, for block mixins
    modImplementation "com.communi-suggestu.saecularia-caudices:saecularia-caudices-core:${project.saecularia_caudices_version}"
    include "com.communi-suggestu.saecularia-caudices:saecularia-caudices-forge:${project.saecularia_caudices_version}"

    //JEI 10
    modCompileOnly("mezz.jei:jei-${project.minecraft_version}-common-api:${project.jei_version}")
    modCompileOnly("mezz.jei:jei-${project.minecraft_version}-forge-api:${project.jei_version}")
    modLocalRuntime("mezz.jei:jei-${project.minecraft_version}-forge:${project.jei_version}") { transitive = false }

    //Building gadgets
    modLocalRuntime modCompileOnly("curse.maven:gadgets-298187:4843616")

    //The one probe
    modLocalRuntime modCompileOnly("mcjty.theoneprobe:theoneprobe:${project.top_version}") {transitive = false}

    //KubeJS
    modLocalRuntime modCompileOnly("dev.latvian.mods:kubejs-forge:${project.kubejs_version}")
    localRuntime("io.github.llamalad7:mixinextras-forge:0.2.0-rc.4")

    //Crafttweaker
    modLocalRuntime modCompileOnly("com.blamejared.crafttweaker:CraftTweaker-forge-${project.minecraft_version}:${project.ct_version}")

    //Mekanism
    modLocalRuntime("mekanism:Mekanism:${project.mekanism_version}")

    //Jade
    modLocalRuntime modCompileOnly("curse.maven:jade-324717:5072729")
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "modid": project.modid,
                "mod_version": project.mod_version,
                "mod_name": project.mod_name,
                "mod_description": project.mod_description,
                "author": project.author,
                "issues": project.issues,
                "license": project.license,
                "icon": project.icon,
                "minecraft_version": project.minecraft_version,
                "architectury_version": project.architectury_version,
                "cloth_config_version": project.cloth_config_version
    }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier = null
}

jar {
    archiveClassifier = "dev"
}

unifiedPublishing {
    project {
        displayName = "[Forge]Custom-Machinery-${project.minecraft_version}-${project.mod_version}"
        releaseType = "beta"
        if(rootProject.file("CHANGELOG.md").exists()) {
            changelog = rootProject.file("CHANGELOG.md").text
        }
        gameVersions = ["${project.minecraft_version}"]
        gameLoaders = ["forge"]
        mainPublication remapJar

        var CURSE_API_KEY = System.getenv("CURSEFORGE")
        if (CURSE_API_KEY != null) {
            curseforge {
                token = CURSE_API_KEY
                id = "457017"
                gameVersions.addAll "Java 17"
                relations {
                    depends "architectury-api"
                    depends "cloth-config"
                    optional "crafttweaker"
                    optional "jei"
                    optional "the-one-probe"
                    optional "kubejs"
                    optional "building-gadgets"
                    optional "jade"
                }
            }
        }

        var MODRINTH_TOKEN = System.getenv("MODRINTH")
        if (MODRINTH_TOKEN != null) {
            modrinth {
                token = MODRINTH_TOKEN
                id = "OrB5XFtI"
                relations {
                    depends "architectury-api"
                    depends "cloth-config"
                    optional "kubejs"
                }
            }
        }
    }
}