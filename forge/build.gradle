plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    accessWidenerPath = project(":common").loom.accessWidenerPath

    forge {
        convertAccessWideners = true
        extraAccessWideners.add loom.accessWidenerPath.get().asFile.name
    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    api
    shadowApi
    compileClasspath.extendsFrom api
    runtimeClasspath.extendsFrom api
    developmentForge.extendsFrom api
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury-forge:${rootProject.architectury_version}"
    modApi "dev.latvian.mods:kubejs-forge:${rootProject.kubejs_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }

    api(project(path: ":api", configuration: "namedElements")) { transitive false }
    shadowApi(project(path: ":api", configuration: "transformProductionForge")) { transitive = false }

    modCompileOnlyApi "mezz.jei:jei-${project.minecraft_version}-common-api:${project.jei_version}"
    modCompileOnlyApi "mezz.jei:jei-${project.minecraft_version}-forge-api:${project.jei_version}"
    //Using JEI 9 as jei 10 won't launch ¯\_(ツ)_/¯
    //modRuntimeOnly "mezz.jei:jei-${project.minecraft_version}-forge:${project.jei_version}"
    modRuntimeOnly "mezz.jei:jei-${project.minecraft_version}:9.7.1.255"

    modApi "me.shedaniel.cloth:cloth-config-forge:${project.cloth_config_version}"

    //Building gadgets
    modImplementation "curse.maven:gadgets-298187:3725903"

    //The one probe
    modImplementation("mcjty.theoneprobe:theoneprobe:${project.top_version}") {transitive = false}

    //Crafttweaker
    modImplementation("com.blamejared.crafttweaker:CraftTweaker-forge-1.18.2:${project.ct_version}")

    //Mekanism
    modRuntimeOnly "mekanism:Mekanism:${project.mekanism_version}"

    //Jade
    modImplementation "curse.maven:jade-324717:3865918"
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "modid": project.modid,
                "version": project.version,
                "mod_name": project.mod_name,
                "mod_description": project.mod_description,
                "author": project.author,
                "issues": project.issues,
                "license": project.license,
                "icon": project.icon,
                "minecraft_version": project.minecraft_version,
                "architectury_version": project.architectury_version,
                "cloth_config_version": project.cloth_config_version
    }
}

shadowJar {
    exclude "fabric.mod.json"
    exclude "architectury.common.json"

    configurations = [project.configurations.shadowCommon, project.configurations.shadowApi]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier null
}

jar {
    classifier "dev"
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
